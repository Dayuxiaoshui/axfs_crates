var searchIndex = new Map(JSON.parse('[["axfs_devfs",{"t":"FFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DeviceFileSystem","DirNode","NullDev","ZeroDev","add","","as_any","","","borrow","","","","borrow_mut","","","","create","","","default","from","","","","fsync","get_attr","","","into","","","","lookup","","","mkdir","","mount","new","parent","read_at","","","read_dir","","","remove","","","root_dir","truncate","","","try_from","","","","try_into","","","","type_id","","","","write_at","",""],"q":[[0,"axfs_devfs"],[69,"axfs_devfs::dir"],[70,"axfs_vfs"],[71,"core::any"],[72,"axfs_devfs::null"],[73,"axfs_devfs::zero"],[74,"axfs_vfs::structs"],[75,"alloc::sync"],[76,"core::option"],[77,"core::result"]],"i":"````bl1A`Ab310231023102310233103102310322233103103102310310231023102310","f":"````{{{d{b}}{d{f}}h}j}{{{d{l}}{d{f}}h}j}{{{d{b}}}{{d{n}}}}{{{d{A`}}}{{d{n}}}}{{{d{Ab}}}{{d{n}}}}{d{{d{c}}}{}}000{{{d{Ad}}}{{d{Adc}}}{}}000{{{d{b}}{d{f}}Af}Ah}{{{d{A`}}{d{f}}Af}Ah}{{{d{Ab}}{d{f}}Af}Ah}{{}l}{cc{}}000{{{d{b}}}Ah}{{{d{b}}}{{Ah{Aj}}}}{{{d{A`}}}{{Ah{Aj}}}}{{{d{Ab}}}{{Ah{Aj}}}}{{}c{}}000{{{Al{b}}{d{f}}}{{Ah{h}}}}{{{Al{A`}}{d{f}}}{{Ah{h}}}}{{{Al{Ab}}{d{f}}}{{Ah{h}}}}{{{d{{Al{b}}}}{d{f}}}{{Al{b}}}}{{{d{l}}{d{f}}}{{Al{b}}}}{{{d{l}}{d{f}}h}Ah}<{{{d{b}}}{{An{h}}}}{{{d{b}}B`{d{Ad{Bd{Bb}}}}}{{Ah{Bf}}}}{{{d{A`}}B`{d{Ad{Bd{Bb}}}}}{{Ah{Bf}}}}{{{d{Ab}}B`{d{Ad{Bd{Bb}}}}}{{Ah{Bf}}}}{{{d{b}}Bf{d{Ad{Bd{Bh}}}}}{{Ah{Bf}}}}{{{d{A`}}Bf{d{Ad{Bd{Bh}}}}}{{Ah{Bf}}}}{{{d{Ab}}Bf{d{Ad{Bd{Bh}}}}}{{Ah{Bf}}}}{{{d{b}}{d{f}}}Ah}{{{d{A`}}{d{f}}}Ah}{{{d{Ab}}{d{f}}}Ah}{{{d{l}}}h}{{{d{b}}B`}Ah}{{{d{A`}}B`}Ah}{{{d{Ab}}B`}Ah}{c{{Bj{e}}}{}{}}000{{}{{Bj{c}}}{}}000{dBl}000{{{d{b}}B`{d{{Bd{Bb}}}}}{{Ah{Bf}}}}{{{d{A`}}B`{d{{Bd{Bb}}}}}{{Ah{Bf}}}}{{{d{Ab}}B`{d{{Bd{Bb}}}}}{{Ah{Bf}}}}","D":"Bd","p":[[5,"DirNode",0,69],[1,"reference",null,null,1],[1,"str"],[8,"VfsNodeRef",70],[1,"unit"],[5,"DeviceFileSystem",0],[10,"Any",71],[5,"NullDev",0,72],[5,"ZeroDev",0,73],[0,"mut"],[6,"VfsNodeType",74],[8,"VfsResult",70],[5,"VfsNodeAttr",74],[5,"Arc",75,null,1],[6,"Option",76,null,1],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",74],[6,"Result",77,null,1],[5,"TypeId",71]],"r":[[1,69],[2,72],[3,73],[4,69],[6,69],[7,72],[8,73],[9,69],[10,72],[11,73],[13,69],[14,72],[15,73],[17,69],[18,72],[19,73],[21,69],[22,72],[23,73],[25,69],[26,69],[27,72],[28,73],[29,69],[30,72],[31,73],[33,69],[34,72],[35,73],[36,69],[40,69],[41,69],[42,72],[43,73],[44,69],[45,72],[46,73],[47,69],[48,72],[49,73],[51,69],[52,72],[53,73],[54,69],[55,72],[56,73],[58,69],[59,72],[60,73],[62,69],[63,72],[64,73],[66,69],[67,72],[68,73]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMABQAHAA4AGgADACIAAgAnAAAAKQAcAA==","P":[[9,"T"],[17,""],[21,"T"],[25,""],[29,"U"],[33,""],[54,"U,T"],[58,"U"],[62,""]]}],["axfs_ramfs",{"t":"FFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DirNode","FileNode","RamFileSystem","as_any","","borrow","","","borrow_mut","","","create","","create_node","default","exist","from","","","fsync","get_attr","","get_entries","into","","","lookup","","mount","new","parent","read_at","","read_dir","","remove","","remove_node","root_dir","root_dir_node","truncate","","try_from","","","try_into","","","type_id","","","write_at",""],"q":[[0,"axfs_ramfs"],[53,"axfs_ramfs::dir"],[54,"core::any"],[55,"axfs_ramfs::file"],[56,"axfs_vfs::structs"],[57,"axfs_vfs"],[58,"alloc::string"],[59,"alloc::vec"],[60,"alloc::sync"],[61,"core::option"],[62,"core::result"]],"i":"```bh10Ab210212022102212210210022121212002121021021021","f":"```{{{d{b}}}{{d{f}}}}{{{d{h}}}{{d{f}}}}{d{{d{c}}}{}}00{{{d{j}}}{{d{jc}}}{}}00{{{d{b}}{d{l}}n}A`}{{{d{h}}{d{l}}n}A`}1{{}Ab}{{{d{b}}{d{l}}}Ad}{cc{}}00{{{d{b}}}A`}{{{d{b}}}{{A`{Af}}}}{{{d{h}}}{{A`{Af}}}}{{{d{b}}}{{Aj{Ah}}}}{{}c{}}00{{{Al{b}}{d{l}}}{{A`{An}}}}{{{Al{h}}{d{l}}}{{A`{An}}}}{{{d{Ab}}{d{l}}An}A`}:{{{d{b}}}{{B`{An}}}}{{{d{b}}Bb{d{j{Bf{Bd}}}}}{{A`{Bh}}}}{{{d{h}}Bb{d{j{Bf{Bd}}}}}{{A`{Bh}}}}{{{d{b}}Bh{d{j{Bf{Bj}}}}}{{A`{Bh}}}}{{{d{h}}Bh{d{j{Bf{Bj}}}}}{{A`{Bh}}}}{{{d{b}}{d{l}}}A`}{{{d{h}}{d{l}}}A`}1{{{d{Ab}}}An}{{{d{Ab}}}{{Al{b}}}}{{{d{b}}Bb}A`}{{{d{h}}Bb}A`}{c{{Bl{e}}}{}{}}00{{}{{Bl{c}}}{}}00{dBn}00{{{d{b}}Bb{d{{Bf{Bd}}}}}{{A`{Bh}}}}{{{d{h}}Bb{d{{Bf{Bd}}}}}{{A`{Bh}}}}","D":"B`","p":[[5,"DirNode",0,53],[1,"reference",null,null,1],[10,"Any",54],[5,"FileNode",0,55],[0,"mut"],[1,"str"],[6,"VfsNodeType",56],[8,"VfsResult",57],[5,"RamFileSystem",0],[1,"bool"],[5,"VfsNodeAttr",56],[5,"String",58],[5,"Vec",59],[5,"Arc",60,null,1],[8,"VfsNodeRef",57],[6,"Option",61,null,1],[1,"u64"],[1,"u8"],[1,"slice"],[1,"usize"],[5,"VfsDirEntry",56],[6,"Result",62,null,1],[5,"TypeId",54]],"r":[[0,53],[1,55],[3,53],[4,55],[5,53],[6,55],[8,53],[9,55],[11,53],[12,55],[13,53],[15,53],[16,53],[17,55],[19,53],[20,53],[21,55],[22,53],[23,53],[24,55],[26,53],[27,55],[30,53],[31,53],[32,55],[33,53],[34,55],[35,53],[36,55],[37,53],[40,53],[41,55],[42,53],[43,55],[45,53],[46,55],[48,53],[49,55],[51,53],[52,55]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUABwAEAAkADwAAABQAAgAbAAIAHwAGACcAAAApAAwA","P":[[5,"T"],[11,""],[16,"T"],[19,""],[23,"U"],[26,""],[42,"U,T"],[45,"U"],[48,""]]}],["axfs_vfs",{"t":"PPPPPPPPPPPPPFTTTPPPPPPPPTTTTTTPPPPPPPPFIFKFIGKIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BlockDevice","CharDevice","ConnectionRefused","ConnectionReset","Dir","DirectoryNotEmpty","Err","Fifo","File","FileSystemInfo","GROUP_EXEC","GROUP_READ","GROUP_WRITE","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","OTHER_EXEC","OTHER_READ","OTHER_WRITE","OWNER_EXEC","OWNER_READ","OWNER_WRITE","Ok","PermissionDenied","ResourceBusy","Socket","StorageFull","SymLink","UnexpectedEof","Unsupported","VfsDirEntry","VfsError","VfsNodeAttr","VfsNodeOps","VfsNodePerm","VfsNodeRef","VfsNodeType","VfsOps","VfsResult","WouldBlock","WriteZero","all","as_any","as_char","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","blocks","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","complement","contains","create","default","default_dir","default_file","difference","empty","entry_type","eq","","extend","file_type","fmt","","","","","","","format","from","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","fsync","get_attr","impl_vfs_dir_default","impl_vfs_non_dir_default","insert","intersection","intersects","into","","","","","into_iter","is_all","is_block_device","is_char_device","is_dir","","is_empty","is_fifo","is_file","","is_socket","is_symlink","iter","iter_names","lookup","mode","mount","name_as_bytes","new","","new_dir","new_file","not","open","owner_executable","owner_readable","owner_writable","parent","path","perm","read_at","read_dir","release","remove","","rename","root_dir","rwx_buf","set","set_perm","size","statfs","sub","sub_assign","symmetric_difference","to_owned","","","toggle","truncate","try_from","","","","","try_into","","","","","type_id","","","","","umount","union","write_at","canonicalize"],"q":[[0,"axfs_vfs"],[193,"axfs_vfs::path"],[194,"axfs_vfs::structs"],[195,"core::any"],[196,"core::iter::traits::collect"],[197,"core::fmt"],[198,"core::option"],[199,"bitflags::iter"],[200,"alloc::sync"],[201,"core::result"],[202,"alloc::string"]],"i":"Df000j01101An11`b003333333300000013323233`````````330d311111111AdCnB`2461024624624624644304444046422444446Bj2135755555544``555213575577375737775545011333545554`344445405533055535754213572135721357054`","f":"``````````````````````````````````````````````````{{}b}{{{f{d}}}{{f{h}}}}{jl}{{bb}b}{{{f{nb}}b}A`}10{{{f{b}}}Ab}021{{{f{Ad}}}Af}{f{{f{c}}}{}}0000{{{f{n}}}{{f{nc}}}{}}0000{{{f{Ad}}}Ad}{{{f{b}}}b}{{{f{j}}}j}{{f{f{nc}}}A`{}}00{{fAh}A`}00{bb}{{{f{b}}b}Aj}{{{f{d}}{f{Al}}j}An}{{}B`}{{}b}0?0{{{f{B`}}}j}{{{f{b}}{f{b}}}Aj}{{{f{j}}{f{j}}}Aj}{{{f{nb}}c}A`{{Bd{}{{Bb{b}}}}}}{{{f{Ad}}}j}{{{f{Ad}}{f{nBf}}}Bh}{{{f{b}}{f{nBf}}}Bh}0000{{{f{j}}{f{nBf}}}Bh}{{{f{Bj}}}An}{cc{}}0000{Ab{{Bl{b}}}}{Abb}00{cb{{Bd{}{{Bb{b}}}}}}{{{f{Al}}}{{Bl{b}}}}{{{f{d}}}An}{{{f{d}}}{{An{Ad}}}}``{{{f{nb}}b}A`}{{bb}b}{{{f{b}}b}Aj}{{}c{}}0000{bc{}}{{{f{b}}}Aj}{jAj}0{{{f{Ad}}}Aj}1210111{{{f{b}}}{{Bn{b}}}}{{{f{b}}}{{C`{b}}}}{{{Cb{d}}{f{Al}}}{{An{Cd}}}}{{{f{b}}}Cf}{{{f{Bj}}{f{Al}}Cd}An}{{{f{B`}}}{{f{{Ch{Ah}}}}}}{{{f{Al}}j}B`}{{bjAfAf}Ad}{{AfAf}Ad}0{bb}{{{f{d}}}An}==={{{f{d}}}{{Bl{Cd}}}}`{{{f{Ad}}}b}{{{f{d}}Af{f{n{Ch{Ah}}}}}{{An{Cj}}}}{{{f{d}}Cj{f{n{Ch{B`}}}}}{{An{Cj}}}}4{{{f{d}}{f{Al}}}An}{{{f{nb}}b}A`}{{{f{d}}{f{Al}}{f{Al}}}An}{{{f{Bj}}}Cd}{{{f{b}}}{{Cl{Ah}}}}{{{f{nb}}bAj}A`}{{{f{nAd}}b}A`}{{{f{Ad}}}Af}{{{f{Bj}}}{{An{Cn}}}}{{bb}b}80{fc{}}009{{{f{d}}Af}An}{c{{D`{e}}}{}{}}0000{{}{{D`{c}}}{}}0000{fDb}0000{{{f{Bj}}}An}6{{{f{d}}Af{f{{Ch{Ah}}}}}{{An{Cj}}}}{{{f{Al}}}Dd}","D":"ABd","p":[[5,"VfsNodePerm",0,194],[10,"VfsNodeOps",0],[1,"reference",null,null,1],[10,"Any",195],[6,"VfsNodeType",0,194],[1,"char"],[0,"mut"],[1,"unit"],[1,"u16"],[5,"VfsNodeAttr",0,194],[1,"u64"],[1,"u8"],[1,"bool"],[1,"str"],[8,"VfsResult",0],[5,"VfsDirEntry",0,194],[17,"Item"],[10,"IntoIterator",196],[5,"Formatter",197],[8,"Result",197],[10,"VfsOps",0],[6,"Option",198,null,1],[5,"Iter",199],[5,"IterNames",199],[5,"Arc",200,null,1],[8,"VfsNodeRef",0],[1,"u32"],[1,"slice"],[1,"usize"],[1,"array"],[5,"FileSystemInfo",0,194],[6,"Result",201,null,1],[5,"TypeId",195],[5,"String",202],[8,"VfsError",0]],"r":[[4,194],[5,194],[8,194],[11,194],[12,194],[13,194],[14,194],[15,194],[16,194],[25,194],[26,194],[27,194],[28,194],[29,194],[30,194],[34,194],[36,194],[39,194],[41,194],[43,194],[45,194],[50,194],[52,194],[53,194],[54,194],[55,194],[56,194],[57,194],[58,194],[59,194],[60,194],[61,194],[62,194],[63,194],[64,194],[65,194],[66,194],[67,194],[68,194],[69,194],[70,194],[71,194],[72,194],[73,194],[74,194],[75,194],[76,194],[77,194],[78,194],[79,194],[80,194],[81,194],[82,194],[84,194],[85,194],[86,194],[87,194],[88,194],[89,194],[90,194],[91,194],[92,194],[93,194],[94,194],[95,194],[96,194],[97,194],[98,194],[99,194],[100,194],[102,194],[103,194],[104,194],[105,194],[106,194],[107,194],[108,194],[109,194],[110,194],[111,194],[112,194],[117,194],[118,194],[119,194],[120,194],[121,194],[122,194],[123,194],[124,194],[125,194],[126,194],[127,194],[128,194],[129,194],[130,194],[131,194],[132,194],[133,194],[134,194],[135,194],[136,194],[137,194],[138,194],[140,194],[142,194],[143,194],[144,194],[145,194],[146,194],[147,194],[149,194],[150,194],[151,194],[154,194],[159,194],[162,194],[163,194],[164,194],[165,194],[167,194],[168,194],[169,194],[170,194],[171,194],[172,194],[173,194],[175,194],[176,194],[177,194],[178,194],[179,194],[180,194],[181,194],[182,194],[183,194],[184,194],[185,194],[186,194],[187,194],[188,194],[189,194],[191,194]],"b":[[57,"impl-Flags-for-VfsNodePerm"],[58,"impl-VfsNodePerm"],[95,"impl-LowerHex-for-VfsNodePerm"],[96,"impl-Debug-for-VfsNodePerm"],[97,"impl-Octal-for-VfsNodePerm"],[98,"impl-UpperHex-for-VfsNodePerm"],[99,"impl-Binary-for-VfsNodePerm"],[108,"impl-VfsNodePerm"],[109,"impl-Flags-for-VfsNodePerm"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAACAA6AAAAPwASAFsAAQBfAAYAbgAAAH4AAACrAAIAsAAOAA==","P":[[62,"T"],[72,""],[75,"T"],[78,""],[92,"T"],[93,""],[102,"T"],[107,""],[111,"T"],[112,""],[120,"U"],[125,"IntoIterator::IntoIter"],[126,""],[170,"T"],[173,""],[175,"U,T"],[180,"U"],[185,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2748,2330,6323]}